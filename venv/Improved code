# Set variables
food = {}
accommodation = {}
travel = {}
miscellaneous = {}
activity = {}
expenses = {}
category_list = ["accommodation", "food", "travel", "miscellaneous", "activity"]

# Forcing valid input from user
def force_number(message):
    while True:
        try:
            number = float(input(message))
            if(number <= 0):
               print("Please enter an amount greater than $0")
               continue
        except ValueError:
            print("Please enter an amount")
            continue
        else:
           break
    return number


# Forcing string only response from user
def force_answer(query):
    answer = input(query)
    # checking for numbers
    for l in answer:
        if l.isdigit():
            print("Please enter valid input")
            answer = input(query)
    # checking for spaces or letters
        else:
            if all(l.isalpha() or l.isspace() for l in answer):
                return answer
# Getting yes or no answer only
def confirm_answer(question):
    while True:
        reply = input(question).lower().strip()
        if reply == "yes":
            return True
            break
        elif reply == "no":
            return False
            break
        else:
            print("Please enter yes or no")
            continue
            
# Getting user's category choice
def category(category_list):
    print(category_list)
    while True:
        category = input("Which category does your expense fall under?").lower().strip()
        if category in category_list:
            return category
        else:
            print("Please enter a category in the list")       

def categorizing_expense(daily_budget):
    tracking = True
    while tracking:
        # Prompt for user's expense and expense type
        Chosen_Category = category(category_list)
        name = force_answer("What is your expense for? e.g breakfast, movies, taxi, souvenirs  ").strip().title()
        expense = force_number("Enter your expense:$")
        # Stores expense in the user's chosen category dictionary
        if Chosen_Category == "food":
            food[name] = expense
        elif Chosen_Category == "travel":
            travel[name] = expense
        elif Chosen_Category == "accommodation":
            accommodation[name] = expense
        elif Chosen_Category == "activity":
            activity[name] = expense
        elif Chosen_Category == "miscellaneous":
            miscellaneous[name] = expense
        # Finding out if user wants to enter another expense
        repeat = confirm_answer("Would you like to enter another expense?")
        if repeat == False:
            tracking == False
            return food, travel, accommodation, activity, miscellaneous, daily_budget
        else:
            # Lets user know how much they have left to spend
            if daily_budget >= expense:
                daily_budget -= expense
                print("You have ${:,.2f} left to spend".format(daily_budget))
            # Lets user know they are over their set budget
            elif daily_budget < expense:
                daily_budget -= expense
                print("You are over your budget by ${:,.2f}".format(daily_budget))

def history(food, travel, accommodation, activity, miscellaneous):
    history = confirm_answer("Would you like to see your expense history?")
    if history == True:
        # Merging dictionries into one 
        expenditure = food | travel | accommodation | activity | miscellaneous
        # Returning values of expenditure 
        values = expenditure.values()
        total_spending = sum(values)
        print("Previous Expenditure")
        print(f"~ Food expenditure ~ \n {food} \n ~ Travel expenditure ~ \n {travel} \n ~ Accommodation expenditure ~ \n{accommodation} \n ~ Activity expenditure ~ \n {activity} \n ~ Miscellaneous expenditure ~ \n {miscellaneous}")
        print("Your total expenditure is: ${:,.2f}".format(total_spending))
    else:
        print("Thank you for you using this program to track your expenses")

def rec(total_spending, daily_budget):
    # If user spends more then their budget prints out be careful recommendation
    if total_spending >= daily_budget:
        print("You spent ${:,.2f} while the budget you set was ${:,.2f} \n Next time be more mindful of your spending".format(total_spending, daily_budget))
    else:
     # If user spends less then their budget prints out good job recommendation
        if daily_budget > total_spending:
            print("The budget you set was ${:,.2f} and you spent ${:,.2f} \n Next time you can treat yourself".format(daily_budget, total_spending))


#MAIN
print("Welcome to my expense tracking program where you can track your travel expenses")
daily_budget = force_number("What is your daily budget: $")
print("You have set your daily budget to {}".format(daily_budget))
budget_confirmation = confirm_answer("Are you sure this is your budget? [yes or no]")
while budget_confirmation == False:
    daily_budget = force_number("What is your daily budget?")
    budget_confirmation = confirm_answer("Are you sure this is your budget? [yes or no]")
else:
    print("You have set your daily budget to ${:,.2f}".format(daily_budget))
    print("Thank you, you may proceed")
categorizing_expense(daily_budget)
# Merging dictionries into one
expenditure = food | travel | accommodation | activity | miscellaneous
# Returning values of expenditure
values = expenditure.values()
# Summing all values in dictionary
total_spending = sum(values)
history(food, travel, accommodation, activity, miscellaneous, total_spending)
rec(total_spending, daily_budget)


